About the LizardFS Wireshark plugin
===================================

This directory contains a Python and Bash scripts which generate a plugin
(dissector) for Wireshark (http://www.wireshark.org/) which adds support for
the LizardFS protocol. This plugin is compiled into a lizardfs.so shared
library to make it easily redistributable.

To learn more about Wireshark dissectors see:
https://www.wireshark.org/docs/wsdg_html_chunked/ChapterDissection.html

----

Follow below steps to install LizardFS Wireshark plugin:

1) Ensure you have the following packages installed (for Debian and Ubuntu):

        # apt install wireshark cmake libcap-dev libglib2.0-dev bison flex libcrypto++-dev libc-ares-dev

2) If you want to be able to sniff interfaces without root privileges follow
   instructions from /usr/share/doc/wireshark-common/README.Debian (same steps
   for Ubuntu):

        # apt install wireshark
        # dpkg-reconfigure wireshark-common
        # usermod -a -G wireshark $USER
        # reboot
        # chmod +s /usr/bin/dumpcap

   If you haven't installed Wireshark yet, you can find instructions here:
   https://code.wireshark.org/review/gitweb?p=wireshark.git;a=blob_plain;f=debian/README.Debian;hb=HEAD

3) Set some variables:

        $ LIZARDFS_SRCDIR=~/src/lizardfs
        $ WIRESHARK_SRCDIR=~/src/wireshark
        $ WIRESHARK_VERSION=2.2.6  # get version by invoking wireshark --version

4) Clone the Wireshark sources, e.g.:

        $ git clone http://code.wireshark.org/git/wireshark "$WIRESHARK_SRCDIR"

5) Checkout your version of Wireshark:

        $ cd "$WIRESHARK_SRCDIR" && git checkout wireshark-$WIRESHARK_VERSION

6) Copy contents of this directory to the Wireshark source directory:

        $ tar -C "$LIZARDFS_SRCDIR"/utils/wireshark -c . | tar -C "$WIRESHARK_SRCDIR" -vx

7) Run the generate.sh script (provide path to the MFSCommunication file as an
   argument):

        $ "$WIRESHARK_SRCDIR"/plugins/epan/lizardfs/generate.sh "$LIZARDFS_SRCDIR"/src/protocol/MFSCommunication.h

8) Edit the main CMakeLists.txt file in the Wireshark source tree to add the
   new plugin:

        $ vim "$WIRESHARK_SRCDIR"/CMakeLists.txt

            --- a/CMakeLists.txt
            +++ b/CMakeLists.txt
            @@ -1401,6 +1401,7 @@ if(ENABLE_PLUGINS)
                            plugins/epan/ethercat
                            plugins/epan/gryphon
                            plugins/epan/irda
            +               plugins/epan/lizardfs
                            plugins/epan/mate
                            plugins/epan/opcua
                            plugins/epan/profinet

9) Build the Wireshark using cmake (you don't have to build the GUI):

        $ mkdir "$WIRESHARK_SRCDIR"/build
        $ cd "$WIRESHARK_SRCDIR"/build
        $ cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_wireshark=NO
        $ make -j8

10) To install the plugin copy lizardfs.so library to the personal plugin
    folder:

        $ mkdir -p ${PERSONAL_CONFIG_DIR}/epan
        $ cp "$WIRESHARK_SRCDIR"/build/run/lizardfs.so ${PERSONAL_CONFIG_DIR}/epan

    or global plugin folder:

        # cp "$WIRESHARK_SRCDIR"/build/run/lizardfs.so ${GLOBAL_CONFIG_DIR}/epan

    ${PERSONAL_CONFIG_DIR} and ${GLOBAL_CONFIG_DIR} are dependent on your
    system and Wireshark version. You can determine them by running Wireshark
    and navigating to:

        Help > About Wireshark > Folders

    E.g. for Wireshark 2.6.7:

        PERSONAL_CONFIG_DIR=~/.local/lib/wireshark/plugins/2.6
        GLOBAL_CONFIG_DIR=/usr/lib/x86_64-linux-gnu/wireshark/plugins/2.6

12) Enjoy!

    This plugin recognizes the LizardFS protocol using TCP port numbers. If you
    use non-standard ports (9419-9422) you need to change them in:

        Edit -> Preferences -> Protocols -> LizardFS

    E.g. to parse the communication in our test suite set LizardFS TCP ports to:

        9419-9422,25000-25015
